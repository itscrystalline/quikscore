name: ðŸ“… Track Issue Start/End Dates 
on:
  issues:
    types: [assigned, closed]

permissions:
  issues: write
  repository-projects: write

jobs:
  update-dates:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PROJECT_NUMBER: 4  # <-- set your actual project number
      PROJECT_OWNER: ${{ github.repository_owner }}

    steps:
      - name: Determine field name and date
        id: vars
        run: |
          if [ "${{ github.event.action }}" = "assigned" ]; then
            echo "FIELD=Start Date" >> $GITHUB_OUTPUT
          else
            echo "FIELD=End Date" >> $GITHUB_OUTPUT
          fi
          echo "DATE=$(date -u +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Fetch project & field IDs
        id: ids
        run: |
          proj=$(gh project view "$PROJECT_NUMBER" --owner "$PROJECT_OWNER" --format json)
          echo "PROJECT_ID=$(echo "$proj" | jq -r .id)" >> $GITHUB_OUTPUT

          fields=$(gh project field-list "$PROJECT_NUMBER" --owner "$PROJECT_OWNER" --format json)
          echo "FIELD_ID=$(echo "$fields" | jq -r \
            --arg name "${{ steps.vars.outputs.FIELD }}" \
            '.fields[] | select(.name == $name).id')" >> $GITHUB_OUTPUT

      - name: Get issue item ID in the project
        id: item
        run: |
          ITEM_ID=$(gh project item-list "$PROJECT_NUMBER" --owner "$PROJECT_OWNER" --format json \
            | jq -r --arg num "${{ github.event.issue.number }}" \
              '.[] | select(.content.number|tostring == $num).id')
          echo "ITEM_ID=$ITEM_ID" >> $GITHUB_OUTPUT

      - name: Update date field on project item
        run: |
          gh project item-edit \
            --project-id "${{ steps.ids.outputs.PROJECT_ID }}" \
            --field-id "${{ steps.ids.outputs.FIELD_ID }}" \
            --id "${{ steps.item.outputs.ITEM_ID }}" \
            --date "${{ steps.vars.outputs.DATE }}"
