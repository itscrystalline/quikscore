# .github/workflows/build.yml
name: Build Artifacts

on:
  push:
    branches:
      - main

jobs:
  nix-build:
    name: Build (Linux & macOS)
    runs-on: ${{ matrix.platform.on }}
    strategy:
      matrix:
        platform: 
          - on: ubuntu-latest 
            name: linux-x86_64
          - on: ubuntu-24.04-arm 
            name: linux-aarch64
          - on: macos-latest 
            name: macos-aarch64
          - on: macos-13
            name: macos-x86_64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v30

    - name: Set up Cachix cache (optional)
      uses: cachix/cachix-action@v15
      with:
        name: devenv

    - name: Build with Nix flake
      run: |
        nix build .

    - name: Upload Nix build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: quikscore-${{ matrix.platform.name }}
        path: |
          result/bin/quikscore

  windows-build:
    name: Build (Windows)
    runs-on: ${{ matrix.platform.on }}
    strategy:
      matrix:
        platform: 
          - on: windows-latest 
            name: windows-x86_64
          - on: windows-11-arm
            name: windows-aarch64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.14'

    - name: Set up Yarn
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: true

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with: 
        toolchain: nightly

    - name: Install dependencies
      run: |
        choco install opencv llvm -y

    - name: Set up Environment variables
      run: |
        echo "RUSTFLAGS='-Z threads=8'" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        echo "OPENCV_INCLUDE_PATHS='C:\tools\opencv\build\include'" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        echo "OPENCV_LINK_LIBS='+opencv_world4110'" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        echo "OPENCV_LINK_PATHS='+C:\tools\opencv\build\x64\vc16\lib'" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Build Tauri app
      run: |
        yarn tauri build --release

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: quikscore-${{ matrix.platform.name }}
        path: |
          src-tauri/target/release/quikscore.exe

